// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/csiabb/donation-service/components/bcadapter (interfaces: IBCAdapter)

// Package mock_bcadapter is a generated GoMock package.
package mock_bcadapter

import (
	structs "github.com/csiabb/donation-service/structs"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIBCAdapter is a mock of IBCAdapter interface
type MockIBCAdapter struct {
	ctrl     *gomock.Controller
	recorder *MockIBCAdapterMockRecorder
}

// MockIBCAdapterMockRecorder is the mock recorder for MockIBCAdapter
type MockIBCAdapterMockRecorder struct {
	mock *MockIBCAdapter
}

// NewMockIBCAdapter creates a new mock instance
func NewMockIBCAdapter(ctrl *gomock.Controller) *MockIBCAdapter {
	mock := &MockIBCAdapter{ctrl: ctrl}
	mock.recorder = &MockIBCAdapterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIBCAdapter) EXPECT() *MockIBCAdapterMockRecorder {
	return m.recorder
}

// Pubs mocks base method
func (m *MockIBCAdapter) Pubs(arg0 string, arg1 []*string) ([]*structs.PubResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Pubs", arg0, arg1)
	ret0, _ := ret[0].([]*structs.PubResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Pubs indicates an expected call of Pubs
func (mr *MockIBCAdapterMockRecorder) Pubs(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Pubs", reflect.TypeOf((*MockIBCAdapter)(nil).Pubs), arg0, arg1)
}

// Register mocks base method
func (m *MockIBCAdapter) Register(arg0 string) (*structs.RegisterResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register", arg0)
	ret0, _ := ret[0].(*structs.RegisterResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Register indicates an expected call of Register
func (mr *MockIBCAdapterMockRecorder) Register(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockIBCAdapter)(nil).Register), arg0)
}
