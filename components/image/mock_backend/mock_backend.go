// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/csiabb/donation-service/components/image (interfaces: IImageBackend)

// Package mock_backend is a generated GoMock package.
package mock_backend

import (
	gomock "github.com/golang/mock/gomock"
	image "image"
	reflect "reflect"
)

// MockIImageBackend is a mock of IImageBackend interface
type MockIImageBackend struct {
	ctrl     *gomock.Controller
	recorder *MockIImageBackendMockRecorder
}

// MockIImageBackendMockRecorder is the mock recorder for MockIImageBackend
type MockIImageBackendMockRecorder struct {
	mock *MockIImageBackend
}

// NewMockIImageBackend creates a new mock instance
func NewMockIImageBackend(ctrl *gomock.Controller) *MockIImageBackend {
	mock := &MockIImageBackend{ctrl: ctrl}
	mock.recorder = &MockIImageBackendMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIImageBackend) EXPECT() *MockIImageBackendMockRecorder {
	return m.recorder
}

// CreateDonationImage mocks base method
func (m *MockIImageBackend) CreateDonationImage(arg0 []string, arg1, arg2, arg3 string, arg4 bool) (*image.NRGBA, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDonationImage", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(*image.NRGBA)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDonationImage indicates an expected call of CreateDonationImage
func (mr *MockIImageBackendMockRecorder) CreateDonationImage(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDonationImage", reflect.TypeOf((*MockIImageBackend)(nil).CreateDonationImage), arg0, arg1, arg2, arg3, arg4)
}

// Init mocks base method
func (m *MockIImageBackend) Init() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Init")
	ret0, _ := ret[0].(error)
	return ret0
}

// Init indicates an expected call of Init
func (mr *MockIImageBackendMockRecorder) Init() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Init", reflect.TypeOf((*MockIImageBackend)(nil).Init))
}
